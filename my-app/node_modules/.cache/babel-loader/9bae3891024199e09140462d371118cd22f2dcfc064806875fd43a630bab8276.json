{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getTasks } from \".\";\nexport const fetchTasks = createAsyncThunk('todoList/fetchTasks', async () => {\n  const tasks = await getTasks();\n  return tasks;\n});\nconst todoSlice = createSlice({\n  name: \"todoList\",\n  initialState: {\n    listTask: []\n  },\n  reducers: {\n    addTask: (state, action) => {\n      state.listTask.push(action.payload.newTask);\n    },\n    deleteTask: (state, action) => {\n      state.listTask = state.listTask.filter(item => item.id !== action.payload.delId);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTasks.fulfilled, (state, action) => {\n      state.listTask = action.payload;\n    }).addCase(fetchTasks.rejected, (state, action) => {\n      state.listTask = [];\n    });\n  }\n});\nexport const {\n  addTask,\n  deleteTask\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getTasks","fetchTasks","tasks","todoSlice","name","initialState","listTask","reducers","addTask","state","action","push","payload","newTask","deleteTask","filter","item","id","delId","extraReducers","builder","addCase","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/features/todoSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n import { getTasks } from \".\";\r\n \r\n export const fetchTasks = createAsyncThunk('todoList/fetchTasks', async () => {\r\n const tasks = await getTasks();\r\n\r\n return tasks;\r\n \r\n });\r\n \r\n const todoSlice = createSlice({\r\n name: \"todoList\",\r\n initialState: { listTask: [] },\r\n reducers: {\r\n  addTask: (state, action) => {\r\n  state.listTask.push(action.payload.newTask);\r\n  },\r\n  deleteTask: (state, action) => {\r\n  state.listTask = state.listTask.filter(\r\n   (item) => item.id !== action.payload.delId\r\n  );\r\n  },\r\n },\r\n \r\n extraReducers: (builder) => {\r\n  builder\r\n  .addCase(fetchTasks.fulfilled, (state, action) => {\r\n   state.listTask = action.payload;\r\n  })\r\n  .addCase(fetchTasks.rejected, (state, action) => {\r\n   state.listTask = [];\r\n  });\r\n },\r\n });\r\n \r\n export const { addTask, deleteTask } = todoSlice.actions;\r\n export default todoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAC/D,SAASC,QAAQ,QAAQ,GAAG;AAE5B,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,qBAAqB,EAAE,YAAY;EAC9E,MAAMG,KAAK,GAAG,MAAMF,QAAQ,CAAC,CAAC;EAE9B,OAAOE,KAAK;AAEZ,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAC9BC,QAAQ,EAAE;IACTC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACH,QAAQ,CAACK,IAAI,CAACD,MAAM,CAACE,OAAO,CAACC,OAAO,CAAC;IAC3C,CAAC;IACDC,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACS,MAAM,CACpCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACM,KACtC,CAAC;IACD;EACD,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAK;IAC3BA,OAAO,CACNC,OAAO,CAACpB,UAAU,CAACqB,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACE,OAAO;IAChC,CAAC,CAAC,CACDS,OAAO,CAACpB,UAAU,CAACsB,QAAQ,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACH,QAAQ,GAAG,EAAE;IACpB,CAAC,CAAC;EACH;AACA,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,OAAO;EAAEM;AAAW,CAAC,GAAGX,SAAS,CAACqB,OAAO;AACxD,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}