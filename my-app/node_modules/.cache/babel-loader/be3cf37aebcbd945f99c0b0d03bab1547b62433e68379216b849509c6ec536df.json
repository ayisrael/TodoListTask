{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   todoList: [],\n// };\nconst initialState = {\n  todoList: []\n};\nconst todoSlice = createSlice({\n  name: \"todoList\",\n  initialState,\n  reducers: {\n    setTodoList: (state, action) => {\n      state.todoList = action.payload;\n    },\n    addTask: (state, action) => {},\n    deleteTask: (state, action) => {\n      state.todoList = state.todoList.filter(item => item.id !== action.payload.delId);\n    }\n  }\n});\n\n// export { fetchTasks };\nexport const {\n  addTask,\n  deleteTask\n} = todoSlice.actions;\n// export default todoSlice.reducer;\n\nexport const {\n  actions\n} = todoSlice;\nexport default todoSlice.reducer;\n// export const selectTodoList = state => state. this is the addtodo: import { Button, Grid, Input } from \"@mui/material\";","map":{"version":3,"names":["createSlice","initialState","todoList","todoSlice","name","reducers","setTodoList","state","action","payload","addTask","deleteTask","filter","item","id","delId","actions","reducer"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/features/todoSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getTasks } from \"../service/apiService\";\r\n\r\n// const initialState = {\r\n//   todoList: [],\r\n// };\r\nexport interface TodoStateInterface {\r\n    todoSlice: {\r\n      todoList: Task[];\r\n    };\r\n  }\r\n  \r\n  const initialState = {\r\n    todoList: [] as Task[]\r\n  };\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todoList\",\r\n  initialState,\r\n  reducers: {\r\n    setTodoList: (state, action) => {\r\n      state.todoList = action.payload;\r\n    },\r\n    addTask: (state, action) => {},\r\n\r\n    deleteTask: (state, action) => {\r\n      state.todoList = state.todoList.filter(\r\n        (item) => item.id !== action.payload.delId\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\n// export { fetchTasks };\r\nexport const { addTask, deleteTask } = todoSlice.actions;\r\n// export default todoSlice.reducer;\r\n\r\nexport const { actions } = todoSlice;\r\nexport default todoSlice.reducer;\r\n// export const selectTodoList = state => state. this is the addtodo: import { Button, Grid, Input } from \"@mui/material\";\r\n"],"mappings":"AAAA,SAASA,WAAW,QAA0B,kBAAkB;;AAGhE;AACA;AACA;AAOE,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AAEH,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZI,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;IAE9BG,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACU,MAAM,CACnCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACM,KACvC,CAAC;IACH;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEL,OAAO;EAAEC;AAAW,CAAC,GAAGR,SAAS,CAACa,OAAO;AACxD;;AAEA,OAAO,MAAM;EAAEA;AAAQ,CAAC,GAAGb,SAAS;AACpC,eAAeA,SAAS,CAACc,OAAO;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}