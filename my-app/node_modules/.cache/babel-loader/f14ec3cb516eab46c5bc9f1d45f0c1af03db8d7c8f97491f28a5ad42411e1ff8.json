{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Normal_User9000\\\\Desktop\\\\toDoList\\\\my-app-tsx\\\\my-app\\\\src\\\\comps\\\\todoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TodoItem from \"./todoItem\";\nimport { Grid } from \"@mui/material\";\nimport AddTodo from \"./addToDo\";\nimport { GET_TASKS } from \"../service/apiService\";\nimport { actions } from \"../features/todoSlice\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const dispatch = useDispatch();\n  const todoList = useSelector(state => state.todoSlice.todoList);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TASKS);\n  useEffect(() => {\n    if (data) {\n      dispatch(actions.setTodoList(data.tasks));\n    }\n  }, [data]);\n\n  // const Item = styled(Paper)(({ theme }) => ({\n  //   backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  //   ...theme.typography.body2,\n  //   padding: theme.spacing(1),\n  //   textAlign: \"center\",\n  //   color: theme.palette.text.secondary,\n  // }));\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 6,\n    children: todoList && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      style: {\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), todoList.map(task => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          task: task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"DsiuQczyQnalCTYGg4UyOvrKqN4=\", false, function () {\n  return [useDispatch, useSelector, useQuery];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","TodoItem","Grid","AddTodo","GET_TASKS","actions","useQuery","jsxDEV","_jsxDEV","TodoList","_s","dispatch","todoList","state","todoSlice","loading","error","data","setTodoList","tasks","container","spacing","children","item","xs","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","map","task","id","_c","$RefreshReg$"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/comps/todoList.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TodoItem from \"./todoItem\";\r\nimport { Grid, Paper, styled } from \"@mui/material\";\r\nimport AddTodo from \"./addToDo\";\r\nimport { GET_TASKS, apolloClient } from \"../service/apiService\";\r\nimport { actions } from \"../features/todoSlice\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport interface TaskProps {\r\n  task: { name: string; id: number };\r\n}\r\n\r\nfunction TodoList() {\r\n  const dispatch = useDispatch();\r\n  const todoList = useSelector((state: any) => state.todoSlice.todoList);\r\n\r\n  const { loading, error, data } = useQuery(GET_TASKS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch(actions.setTodoList(data.tasks));\r\n    }\r\n  }, [data]);\r\n\r\n  // const Item = styled(Paper)(({ theme }) => ({\r\n  //   backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  //   ...theme.typography.body2,\r\n  //   padding: theme.spacing(1),\r\n  //   textAlign: \"center\",\r\n  //   color: theme.palette.text.secondary,\r\n  // }));\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      {todoList && (\r\n        <Grid item xs={5} style={{ margin: \"0 auto\" }}>\r\n          <h1>Todo List</h1>\r\n            {todoList.map((task: { name: string; id: number }) => {\r\n              return <TodoItem task={task} key={task.id} />;\r\n            })}\r\n            <AddTodo />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,IAAI,QAAuB,eAAe;AACnD,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,QAAsB,uBAAuB;AAC/D,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAEa,KAAU,IAAKA,KAAK,CAACC,SAAS,CAACF,QAAQ,CAAC;EAEtE,MAAM;IAAEG,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACF,SAAS,CAAC;EAEpDN,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,EAAE;MACRN,QAAQ,CAACN,OAAO,CAACa,WAAW,CAACD,IAAI,CAACE,KAAK,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;;EAEV;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACET,OAAA,CAACN,IAAI;IAACkB,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBV,QAAQ,iBACPJ,OAAA,CAACN,IAAI;MAACqB,IAAI;MAACC,EAAE,EAAE,CAAE;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAJ,QAAA,gBAC5Cd,OAAA;QAAAc,QAAA,EAAI;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACflB,QAAQ,CAACmB,GAAG,CAAEC,IAAkC,IAAK;QACpD,oBAAOxB,OAAA,CAACP,QAAQ;UAAC+B,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAC/C,CAAC,CAAC,eACFtB,OAAA,CAACL,OAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAACpB,EAAA,CAjCQD,QAAQ;EAAA,QACEV,WAAW,EACXC,WAAW,EAEKM,QAAQ;AAAA;AAAA4B,EAAA,GAJlCzB,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}