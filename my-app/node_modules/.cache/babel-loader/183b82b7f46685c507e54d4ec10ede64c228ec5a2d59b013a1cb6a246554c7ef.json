{"ast":null,"code":"import { HttpLink, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:4000/graphql/\"\n});\nexport const apolloClient = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\nexport const GET_TASKS = gql`\n  query {\n    tasks {\n      id\n      name\n      iscompleted\n    }\n  }\n`;\nexport const ADD_TASK = gql`\n  mutation AddTask($name: String!) {\n    addTask(name: $name) {\n      id\n      name\n      iscompleted\n    }\n  }\n`;\nexport const DELETE_TASK = gql`\n  mutation DeleteTask($id: Int!) {\n    deleteTask(id: $id)\n  }\n`;\nexport const TOGGLE_TASK = gql`\n  mutation ToggleTask($id: Int!) {\n    toggleTask(id: $id) {\n      id\n      name\n      iscompleted\n    }\n  }\n`;","map":{"version":3,"names":["HttpLink","ApolloClient","InMemoryCache","gql","httpLink","uri","apolloClient","link","cache","GET_TASKS","ADD_TASK","DELETE_TASK","TOGGLE_TASK"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/service/apiService.tsx"],"sourcesContent":["import {  HttpLink, ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: \"http://localhost:4000/graphql/\"\r\n})\r\n\r\nexport const apolloClient = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport const GET_TASKS = gql`\r\n  query {\r\n    tasks {\r\n      id\r\n      name\r\n      iscompleted\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ADD_TASK = gql`\r\n  mutation AddTask($name: String!) {\r\n    addTask(name: $name) {\r\n      id\r\n      name\r\n      iscompleted\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_TASK = gql`\r\n  mutation DeleteTask($id: Int!) {\r\n    deleteTask(id: $id)\r\n  }\r\n`;\r\n\r\nexport const TOGGLE_TASK = gql`\r\n  mutation ToggleTask($id: Int!) {\r\n    toggleTask(id: $id) {\r\n      id\r\n      name\r\n      iscompleted\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"AAAA,SAAUA,QAAQ,EAAEC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AACvE,SAASC,GAAG,QAAQ,gBAAgB;AACpC;;AAEA,MAAMC,QAAQ,GAAG,IAAIJ,QAAQ,CAAC;EAC5BK,GAAG,EAAE;AACP,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,IAAIL,YAAY,CAAC;EAC3CM,IAAI,EAAEH,QAAQ;EACdI,KAAK,EAAE,IAAIN,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAMO,SAAS,GAAGN,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,OAAO,MAAMO,QAAQ,GAAGP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAGR,GAAI;AAC/B;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGT,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}