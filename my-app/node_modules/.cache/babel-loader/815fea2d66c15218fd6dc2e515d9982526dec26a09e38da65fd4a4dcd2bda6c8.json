{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  todoList: []\n};\nconst todoSlice = createSlice({\n  name: \"todoList\",\n  initialState,\n  reducers: {\n    setTodoList: (state, action) => {\n      state.todoList = action.payload;\n      console.log(s);\n    },\n    addTask: (state, action) => {\n      state.todoList.push(action.payload);\n    },\n    deleteTask: (state, action) => {\n      state.todoList = state.todoList.filter(item => item.id !== action.payload.delId);\n    },\n    toggleTask: (state, action) => {\n      const taskId = action.payload;\n      const task = state.todoList.find(item => item.id === taskId);\n      if (task) {\n        task.iscompleted = !task.iscompleted;\n      }\n    }\n  }\n});\n\n// export { fetchTasks };\nexport const {\n  addTask,\n  deleteTask\n} = todoSlice.actions;\n// export default todoSlice.reducer;\n\nexport const {\n  actions\n} = todoSlice;\nexport default todoSlice.reducer;\n// export const selectTodoList = state => state. this is the addtodo: import { Button, Grid, Input } from \"@mui/material\";","map":{"version":3,"names":["createSlice","initialState","todoList","todoSlice","name","reducers","setTodoList","state","action","payload","console","log","s","addTask","push","deleteTask","filter","item","id","delId","toggleTask","taskId","task","find","iscompleted","actions","reducer"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/features/todoSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport todoList from \"../comps/todoList\";\r\n\r\nexport interface Task {\r\n  name: string;\r\n  id: number;\r\n  iscompleted: boolean;\r\n}\r\nexport interface TodoStateInterface {\r\n  todoSlice: {\r\n    todoList: Task[];\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  todoList: [] as Task[],\r\n};\r\n\r\n\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todoList\",\r\n  initialState,\r\n  reducers: {\r\n    setTodoList: (state, action) => {\r\n      state.todoList = action.payload;\r\n      console.log(s)\r\n    },\r\n    addTask: (state, action) => {\r\n      state.todoList.push(action.payload);\r\n    },\r\n\r\n    deleteTask: (state, action) => {\r\n      state.todoList = state.todoList.filter(\r\n        (item) => item.id !== action.payload.delId\r\n      );\r\n    },\r\n    toggleTask: (state, action) => {\r\n      const taskId = action.payload; \r\n      const task = state.todoList.find((item) => item.id === taskId);\r\n      if (task) {\r\n        task.iscompleted = !task.iscompleted;\r\n      }\r\n    },\r\n    \r\n  },\r\n});\r\n\r\n// export { fetchTasks };\r\nexport const { addTask, deleteTask } = todoSlice.actions;\r\n// export default todoSlice.reducer;\r\n\r\nexport const { actions } = todoSlice;\r\nexport default todoSlice.reducer;\r\n// export const selectTodoList = state => state. this is the addtodo: import { Button, Grid, Input } from \"@mui/material\";\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAc9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AAID,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZI,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;MAC/BC,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;IAChB,CAAC;IACDC,OAAO,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,QAAQ,CAACY,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;IACrC,CAAC;IAEDM,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACc,MAAM,CACnCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACC,OAAO,CAACU,KACvC,CAAC;IACH,CAAC;IACDC,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMa,MAAM,GAAGb,MAAM,CAACC,OAAO;MAC7B,MAAMa,IAAI,GAAGf,KAAK,CAACL,QAAQ,CAACqB,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKG,MAAM,CAAC;MAC9D,IAAIC,IAAI,EAAE;QACRA,IAAI,CAACE,WAAW,GAAG,CAACF,IAAI,CAACE,WAAW;MACtC;IACF;EAEF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEX,OAAO;EAAEE;AAAW,CAAC,GAAGZ,SAAS,CAACsB,OAAO;AACxD;;AAEA,OAAO,MAAM;EAAEA;AAAQ,CAAC,GAAGtB,SAAS;AACpC,eAAeA,SAAS,CAACuB,OAAO;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}