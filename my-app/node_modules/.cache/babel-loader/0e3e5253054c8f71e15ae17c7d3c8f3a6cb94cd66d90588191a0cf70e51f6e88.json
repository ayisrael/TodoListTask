{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import { getTasks } from \"../service/apiService\";\n\n// const initialState = {\n//   todoList: []\n// };\n\n// const todoSlice = createSlice({\n//   name: \"todoList\",\n//   initialState,\n//   reducers: {\n//     setTodoList:(state, action) => {\n//       state.todoList = action.payload\n//     },\n//     addTask: (state, action) => {\n\n//     },\n\n//     deleteTask: (state, action) => {\n\n//     },\n//   },\n\n// });\n\n// // export { fetchTasks };\n// export const { addTask, deleteTask } = todoSlice.actions;\n// // export default todoSlice.reducer;\n\n// export const {actions} = todoSlice;\n// export default todoSlice.reducer;\n// // export const selectTodoList = state => state. this is the addtodo: import { Button, Grid, Input } from \"@mui/material\";","map":{"version":3,"names":[],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/features/todoSlice.tsx"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import { getTasks } from \"../service/apiService\";\r\n\r\n// const initialState = {\r\n//   todoList: []\r\n// };\r\n\r\n// const todoSlice = createSlice({\r\n//   name: \"todoList\",\r\n//   initialState,\r\n//   reducers: {\r\n//     setTodoList:(state, action) => {\r\n//       state.todoList = action.payload\r\n//     },\r\n//     addTask: (state, action) => {\r\n    \r\n//     },\r\n\r\n//     deleteTask: (state, action) => {\r\n \r\n//     },\r\n//   },\r\n\r\n// });\r\n\r\n// // export { fetchTasks };\r\n// export const { addTask, deleteTask } = todoSlice.actions;\r\n// // export default todoSlice.reducer;\r\n\r\n// export const {actions} = todoSlice;\r\n// export default todoSlice.reducer;\r\n// // export const selectTodoList = state => state. this is the addtodo: import { Button, Grid, Input } from \"@mui/material\";"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}