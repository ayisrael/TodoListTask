{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initState = {\n  todos_ar: [{\n    name: \"go to work\",\n    id: 1\n  }, {\n    name: \"go to Gym\",\n    id: 2\n  }, {\n    name: \"go to home\",\n    id: 3\n  }, {\n    name: \"go to shnatz\",\n    id: 4\n  }, {\n    name: \"go to eat\",\n    id: 5\n  }, {\n    name: \"go to sleep\",\n    id: 6\n  }]\n};\nconst todoSlice = createSlice({\n  name: \"todo\",\n  initialState: initState,\n  reducers: {\n    addNewItem: (state, action) => {\n      state.todos_ar.push(action.payload.todoItem);\n    },\n    delItem: (state, action) => {\n      state.todos_ar = state.todos_ar.filter(item => item.id !== action.payload.delId);\n    }\n  }\n});\n\n// GraphQL query definition to fetch tasks\nconst GET_TASKS = gql`\n  query {\n    tasks {\n      id\n      name\n    }\n  }\n`;\n\n// GraphQL mutation definition to add a new task\nconst ADD_TASK = gql`\n  mutation AddTask($name: String) {\n    addTask(name: $name) {\n      id\n      name\n    }\n  }\n`;\n\n// GraphQL mutation definition to delete a task\nconst DELETE_TASK = gql`\n  mutation DeleteTask($id: Int) {\n    deleteTask(id: $id)\n  }\n`;\n\n// Action creator to fetch tasks from the server\nexport const fetchTasks = () => {\n  var _s = $RefreshSig$();\n  return _s(async dispatch => {\n    _s();\n    try {\n      const {\n        data\n      } = await useQuery(GET_TASKS);\n      dispatch(todoSlice.actions.setTasks(data.tasks));\n    } catch (error) {\n      console.log('Error fetching tasks:', error);\n      throw new Error('Failed to fetch tasks');\n    }\n  }, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", true);\n};\n\n// Action creator to add a new task using the Apollo mutation\nexport const addNewTask = name => {\n  var _s2 = $RefreshSig$();\n  return _s2(async dispatch => {\n    _s2();\n    try {\n      const [addTask] = useMutation(ADD_TASK);\n      const response = await addTask({\n        variables: {\n          name\n        }\n      });\n      dispatch(todoSlice.actions.addNewItem(response.data.addTask));\n    } catch (error) {\n      console.log('Error adding task:', error);\n      throw new Error('Failed to add task');\n    }\n  }, \"5472LmJndBUsRlLE2NyawSSB2X0=\", true);\n};\n\n// Action creator to delete a task using the Apollo mutation\nexport const deleteTask = id => {\n  var _s3 = $RefreshSig$();\n  return _s3(async dispatch => {\n    _s3();\n    try {\n      const [deleteTask] = useMutation(DELETE_TASK);\n      const response = await deleteTask({\n        variables: {\n          id\n        }\n      });\n      if (response.data.deleteTask) {\n        dispatch(todoSlice.actions.delItem(id));\n      }\n    } catch (error) {\n      console.log('Error deleting task:', error);\n      throw new Error('Failed to delete task');\n    }\n  }, \"WERufXhPoo+MVEF0vJ+fgHc/WgY=\", true);\n};\nexport const {\n  addNewItem,\n  delItem\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","initState","todos_ar","name","id","todoSlice","initialState","reducers","addNewItem","state","action","push","payload","todoItem","delItem","filter","item","delId","GET_TASKS","gql","ADD_TASK","DELETE_TASK","fetchTasks","_s","$RefreshSig$","dispatch","data","useQuery","actions","setTasks","tasks","error","console","log","Error","addNewTask","_s2","addTask","useMutation","response","variables","deleteTask","_s3","reducer"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/features/todoSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initState = {\r\n  todos_ar: [\r\n    { name: \"go to work\", id: 1 },\r\n    { name: \"go to Gym\", id: 2 },\r\n    { name: \"go to home\", id: 3 },\r\n    { name: \"go to shnatz\", id: 4 },\r\n    { name: \"go to eat\", id: 5 },\r\n    { name: \"go to sleep\", id: 6 },\r\n  ],\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: initState,\r\n  reducers: {\r\n    addNewItem: (state, action) => {\r\n      state.todos_ar.push(action.payload.todoItem);\r\n    },\r\n    delItem: (state, action) => {\r\n        state.todos_ar= state.todos_ar.filter((item)=> item.id!==action.payload.delId)\r\n    },\r\n  },\r\n});\r\n\r\n// GraphQL query definition to fetch tasks\r\nconst GET_TASKS = gql`\r\n  query {\r\n    tasks {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n// GraphQL mutation definition to add a new task\r\nconst ADD_TASK = gql`\r\n  mutation AddTask($name: String) {\r\n    addTask(name: $name) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n// GraphQL mutation definition to delete a task\r\nconst DELETE_TASK = gql`\r\n  mutation DeleteTask($id: Int) {\r\n    deleteTask(id: $id)\r\n  }\r\n`;\r\n\r\n// Action creator to fetch tasks from the server\r\nexport const fetchTasks = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await useQuery(GET_TASKS);\r\n      dispatch(todoSlice.actions.setTasks(data.tasks));\r\n    } catch (error) {\r\n      console.log('Error fetching tasks:', error);\r\n      throw new Error('Failed to fetch tasks');\r\n    }\r\n  };\r\n};\r\n\r\n// Action creator to add a new task using the Apollo mutation\r\nexport const addNewTask = (name) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const [addTask] = useMutation(ADD_TASK);\r\n      const response = await addTask({ variables: { name } });\r\n      dispatch(todoSlice.actions.addNewItem(response.data.addTask));\r\n    } catch (error) {\r\n      console.log('Error adding task:', error);\r\n      throw new Error('Failed to add task');\r\n    }\r\n  };\r\n};\r\n\r\n// Action creator to delete a task using the Apollo mutation\r\nexport const deleteTask = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const [deleteTask] = useMutation(DELETE_TASK);\r\n      const response = await deleteTask({ variables: { id } });\r\n      if (response.data.deleteTask) {\r\n        dispatch(todoSlice.actions.delItem(id));\r\n      }\r\n    } catch (error) {\r\n      console.log('Error deleting task:', error);\r\n      throw new Error('Failed to delete task');\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const {addNewItem, delItem} = todoSlice.actions ;\r\nexport default todoSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}