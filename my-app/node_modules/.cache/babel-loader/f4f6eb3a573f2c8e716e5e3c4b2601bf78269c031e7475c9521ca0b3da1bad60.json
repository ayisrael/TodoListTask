{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Normal_User9000\\\\Desktop\\\\toDoList\\\\my-app-tsx\\\\my-app\\\\src\\\\comps\\\\todoItem.tsx\",\n  _s = $RefreshSig$();\nimport { Checkbox, IconButton, ListItem, ListItemButton, ListItemIcon, ListItemText } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { TOGGLE_TASK, GET_TASKS } from '../service/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoItem(props) {\n  _s();\n  // const dispatch = useDispatch();\n  const [checked, setChecked] = useState(props.task.iscompleted);\n  const [toggleTaskMutation] = useMutation(TOGGLE_TASK, {\n    refetchQueries: [{\n      query: GET_TASKS\n    }] // Refetch the tasks query after toggling\n  });\n\n  const handleToggle = async () => {\n    try {\n      await toggleTaskMutation({\n        variables: {\n          id: props.task.id\n        }\n      });\n      setChecked(!checked);\n    } catch (error) {\n      console.error('Error toggling task:', error);\n    }\n  };\n  const handleDelete = async () => {\n    // Handle the delete functionality\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    disablePadding: true,\n    children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          edge: \"start\",\n          checked: checked,\n          onChange: handleToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: props.task.name,\n        style: {\n          fontStyle: checked ? 'italic' : 'normal',\n          textDecorationLine: checked ? 'line-through' : 'none',\n          color: checked ? 'gray' : 'black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleDelete,\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          style: {\n            color: 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoItem, \"chGkObWUPxWEhPIWekxUcPpoOvk=\", false, function () {\n  return [useMutation];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["Checkbox","IconButton","ListItem","ListItemButton","ListItemIcon","ListItemText","DeleteIcon","React","useState","useMutation","TOGGLE_TASK","GET_TASKS","jsxDEV","_jsxDEV","TodoItem","props","_s","checked","setChecked","task","iscompleted","toggleTaskMutation","refetchQueries","query","handleToggle","variables","id","error","console","handleDelete","disablePadding","children","edge","onChange","fileName","_jsxFileName","lineNumber","columnNumber","primary","name","style","fontStyle","textDecorationLine","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/comps/todoItem.tsx"],"sourcesContent":["import { Checkbox, IconButton, ListItem, ListItemButton, ListItemIcon, ListItemText } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMutation } from '@apollo/client';\r\nimport { TOGGLE_TASK, GET_TASKS } from '../service/apiService';\r\nimport { TaskProps } from './todoList';\r\n\r\nfunction TodoItem(props: TaskProps) {\r\n  // const dispatch = useDispatch();\r\n  const [checked, setChecked] = useState(props.task.iscompleted);\r\n\r\n  const [toggleTaskMutation] = useMutation(TOGGLE_TASK, {\r\n    refetchQueries: [{ query: GET_TASKS }], // Refetch the tasks query after toggling\r\n  });\r\n\r\n  const handleToggle = async () => {\r\n    try {\r\n      await toggleTaskMutation({ variables: { id: props.task.id } });\r\n      setChecked(!checked);\r\n    } catch (error) {\r\n      console.error('Error toggling task:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    // Handle the delete functionality\r\n  };\r\n\r\n  return (\r\n    <ListItem disablePadding>\r\n      <ListItemButton>\r\n        <ListItemIcon>\r\n          <Checkbox edge=\"start\" checked={checked} onChange={handleToggle} />\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary={props.task.name}\r\n          style={{\r\n            fontStyle: checked ? 'italic' : 'normal',\r\n            textDecorationLine: checked ? 'line-through' : 'none',\r\n            color: checked ? 'gray' : 'black',\r\n          }}\r\n        />\r\n        <IconButton onClick={handleDelete} edge=\"end\" aria-label=\"delete\">\r\n          <DeleteIcon style={{ color: 'red' }} />\r\n        </IconButton>\r\n      </ListItemButton>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}