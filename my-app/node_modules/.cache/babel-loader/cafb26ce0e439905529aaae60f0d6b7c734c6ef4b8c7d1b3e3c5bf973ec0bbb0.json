{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initState = {\n  todos_ar: [{\n    name: \"go to work\",\n    id: 1\n  }, {\n    name: \"go to Gym\",\n    id: 2\n  }, {\n    name: \"go to home\",\n    id: 3\n  }, {\n    name: \"go to shnatz\",\n    id: 4\n  }, {\n    name: \"go to eat\",\n    id: 5\n  }, {\n    name: \"go to sleep\",\n    id: 6\n  }]\n};\nconst todoSlice = createSlice({\n  name: \"todo\",\n  initialState: initState,\n  reducers: {\n    addNewItem: (state, action) => {\n      state.todos_ar.push(action.payload.todoItem);\n    },\n    delItem: (state, action) => {\n      state.todos_ar = state.todos_ar.filter(item => item.id !== action.payload.delId);\n    }\n  }\n});\n\n// GraphQL query definition to fetch tasks\nconst GET_TASKS = gql`\n  query {\n    tasks {\n      id\n      name\n    }\n  }\n`;\n\n// GraphQL mutation definition to add a new task\nconst ADD_TASK = gql`\n  mutation AddTask($name: String) {\n    addTask(name: $name) {\n      id\n      name\n    }\n  }\n`;\n\n// GraphQL mutation definition to delete a task\nconst DELETE_TASK = gql`\n  mutation DeleteTask($id: Int) {\n    deleteTask(id: $id)\n  }\n`;\nexport const {\n  addNewItem,\n  delItem\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","initState","todos_ar","name","id","todoSlice","initialState","reducers","addNewItem","state","action","push","payload","todoItem","delItem","filter","item","delId","GET_TASKS","gql","ADD_TASK","DELETE_TASK","actions","reducer"],"sources":["C:/Users/Normal_User9000/Desktop/toDoList/my-app-tsx/my-app/src/features/todoSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initState = {\r\n  todos_ar: [\r\n    { name: \"go to work\", id: 1 },\r\n    { name: \"go to Gym\", id: 2 },\r\n    { name: \"go to home\", id: 3 },\r\n    { name: \"go to shnatz\", id: 4 },\r\n    { name: \"go to eat\", id: 5 },\r\n    { name: \"go to sleep\", id: 6 },\r\n  ],\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: initState,\r\n  reducers: {\r\n    addNewItem: (state, action) => {\r\n      state.todos_ar.push(action.payload.todoItem);\r\n    },\r\n    delItem: (state, action) => {\r\n        state.todos_ar= state.todos_ar.filter((item)=> item.id!==action.payload.delId)\r\n    },\r\n  },\r\n});\r\n\r\n\r\n// GraphQL query definition to fetch tasks\r\nconst GET_TASKS = gql`\r\n  query {\r\n    tasks {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n// GraphQL mutation definition to add a new task\r\nconst ADD_TASK = gql`\r\n  mutation AddTask($name: String) {\r\n    addTask(name: $name) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n// GraphQL mutation definition to delete a task\r\nconst DELETE_TASK = gql`\r\n  mutation DeleteTask($id: Int) {\r\n    deleteTask(id: $id)\r\n  }\r\n`;\r\n\r\nexport const {addNewItem, delItem} = todoSlice.actions ;\r\nexport default todoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,SAAS,GAAG;EAChBC,QAAQ,EAAE,CACR;IAAEC,IAAI,EAAE,YAAY;IAAEC,EAAE,EAAE;EAAE,CAAC,EAC7B;IAAED,IAAI,EAAE,WAAW;IAAEC,EAAE,EAAE;EAAE,CAAC,EAC5B;IAAED,IAAI,EAAE,YAAY;IAAEC,EAAE,EAAE;EAAE,CAAC,EAC7B;IAAED,IAAI,EAAE,cAAc;IAAEC,EAAE,EAAE;EAAE,CAAC,EAC/B;IAAED,IAAI,EAAE,WAAW;IAAEC,EAAE,EAAE;EAAE,CAAC,EAC5B;IAAED,IAAI,EAAE,aAAa;IAAEC,EAAE,EAAE;EAAE,CAAC;AAElC,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZG,YAAY,EAAEL,SAAS;EACvBM,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACP,QAAQ,CAACS,IAAI,CAACD,MAAM,CAACE,OAAO,CAACC,QAAQ,CAAC;IAC9C,CAAC;IACDC,OAAO,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACP,QAAQ,GAAEO,KAAK,CAACP,QAAQ,CAACa,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAGM,MAAM,CAACE,OAAO,CAACK,KAAK,CAAC;IAClF;EACF;AACF,CAAC,CAAC;;AAGF;AACA,MAAMC,SAAS,GAAGC,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAGD,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAME,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAM;EAACX,UAAU;EAAEM;AAAO,CAAC,GAAGT,SAAS,CAACiB,OAAO;AACtD,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}